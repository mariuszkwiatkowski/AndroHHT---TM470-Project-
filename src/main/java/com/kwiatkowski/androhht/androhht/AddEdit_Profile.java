package com.kwiatkowski.androhht.androhht;

import com.kwiatkowski.androhht.androhht.util.CryptoUtil;
import com.kwiatkowski.androhht.androhht.util.DateConverter;
import com.kwiatkowski.androhht.androhht.util.SystemUiHider;

import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.text.Editable;
import android.text.format.DateFormat;
import android.view.MotionEvent;
import android.view.View;
import android.view.MenuItem;
import android.support.v4.app.NavUtils;
import android.widget.Button;
import android.widget.EditText;
import android.widget.SimpleCursorAdapter;
import android.widget.Toast;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;


/**
 * Full-screen activity generated by Android Studio
 */
public class AddEdit_Profile extends Activity {



    private DatabaseManager dbManager;
    private SimpleCursorAdapter dataAdapter;


    private static final boolean AUTO_HIDE = true;


    private static final int AUTO_HIDE_DELAY_MILLIS = 3000;


    private static final boolean TOGGLE_ON_CLICK = true;


    private static final int HIDER_FLAGS = SystemUiHider.FLAG_HIDE_NAVIGATION;


    private SystemUiHider mSystemUiHider;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);





        setContentView(R.layout.activity_add_edit__profile);
        setupActionBar();

        final View controlsView = findViewById(R.id.fullscreen_content_controls);
        final View contentView = findViewById(R.id.fullscreen_content);


        mSystemUiHider = SystemUiHider.getInstance(this, contentView, HIDER_FLAGS);
        mSystemUiHider.setup();
        mSystemUiHider
                .setOnVisibilityChangeListener(new SystemUiHider.OnVisibilityChangeListener() {
                    // Cached values.
                    int mControlsHeight;
                    int mShortAnimTime;

                    @Override
                    @TargetApi(Build.VERSION_CODES.HONEYCOMB_MR2)
                    public void onVisibilityChange(boolean visible) {
                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB_MR2) {
                            if (mControlsHeight == 0) {
                                mControlsHeight = controlsView.getHeight();
                            }
                            if (mShortAnimTime == 0) {
                                mShortAnimTime = getResources().getInteger(
                                        android.R.integer.config_shortAnimTime);
                            }
                            controlsView.animate()
                                    .translationY(visible ? 0 : mControlsHeight)
                                    .setDuration(mShortAnimTime);
                        } else {
                            controlsView.setVisibility(visible ? View.VISIBLE : View.GONE);
                        }

                        if (visible && AUTO_HIDE) {
                            // Schedule a hide().
                            delayedHide(AUTO_HIDE_DELAY_MILLIS);
                        }
                    }
                });


        contentView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (TOGGLE_ON_CLICK) {
                    mSystemUiHider.toggle();
                } else {
                    mSystemUiHider.show();
                }
            }
        });

        Button scan_profile = (Button) findViewById(R.id.btn_add_edit_scan);
        scan_profile.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent start_scanner = new Intent(AddEdit_Profile.this, ScannerActivity.class);
                AddEdit_Profile.this.startActivityForResult(start_scanner, Constants.PROFILE_SCANNER_REQ_CODE);
            }
        });



        Button discard_btn = (Button) findViewById(R.id.btn_add_edit_discard);
        discard_btn.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                Intent backToWelcome = new Intent();
                setResult(RESULT_CANCELED, backToWelcome);
                finish();
            }
        });

        Button accept_btn = (Button) findViewById(R.id.btn_add_edit_accept);
        accept_btn.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {

                EditText passcode = (EditText) findViewById(R.id.edit_Passcode);
                EditText passcode_confirm = (EditText) findViewById(R.id.edit_Passcode_Confirm);

                String passcode_text = passcode.getText().toString();
                String passcode_confirm_text = passcode_confirm.getText().toString();


                if (passcode_text.equals(passcode_confirm_text) && passcode_text.length() > 0) {
                    EditText api_url = (EditText) findViewById(R.id.edit_WebService_URL);
                    EditText cons_key = (EditText) findViewById(R.id.edit_Cons_Key);
                    EditText cons_secret = (EditText) findViewById(R.id.edit_Cons_Secret);

                    String api_url_text = api_url.getText().toString();
                    String cons_key_text = cons_key.getText().toString();
                    String cons_secret_text = cons_secret.getText().toString();


                    Intent toOauth = new Intent(AddEdit_Profile.this, OAuthAccessTokenActivity.class);
                    Bundle toOauth_bundle = new Bundle();
                    toOauth_bundle.putString(Constants.API_URL_TAG, api_url_text);
                    toOauth_bundle.putString(Constants.API_KEY_TAG, cons_key_text);
                    toOauth_bundle.putString(Constants.API_SECRET_TAG, cons_secret_text);

                    toOauth.putExtras(toOauth_bundle);
                    startActivityForResult(toOauth, Constants.ADD_PROFILE_OAUTH_REQ_CODE);
                } else {
                    Toast.makeText(AddEdit_Profile.this, String.format(getResources().getString(R.string.password_dont_match)), Toast.LENGTH_SHORT).show();
                }

            }
        });


    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);

        delayedHide(100);
    }


    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
    private void setupActionBar() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {

            getActionBar().setDisplayHomeAsUpEnabled(true);
        }
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        if (id == android.R.id.home) {
            NavUtils.navigateUpFromSameTask(this);
            return true;
        }
        return super.onOptionsItemSelected(item);
    }


    View.OnTouchListener mDelayHideTouchListener = new View.OnTouchListener() {
        @Override
        public boolean onTouch(View view, MotionEvent motionEvent) {
            if (AUTO_HIDE) {
                delayedHide(AUTO_HIDE_DELAY_MILLIS);
            }
            return false;
        }
    };

    Handler mHideHandler = new Handler();
    Runnable mHideRunnable = new Runnable() {
        @Override
        public void run() {
            mSystemUiHider.hide();
        }
    };


    private void delayedHide(int delayMillis) {
        mHideHandler.removeCallbacks(mHideRunnable);
        mHideHandler.postDelayed(mHideRunnable, delayMillis);
    }

    public void add_a_new_profile(String confirmed_token, String confirmed_secret){

        //setting database connection

        EditText profile_name = (EditText) findViewById(R.id.edit_Profile_Name);
        EditText passcode = (EditText) findViewById(R.id.edit_Passcode);
        EditText passcode_confirm = (EditText) findViewById(R.id.edit_Passcode_Confirm);
        EditText api_url = (EditText) findViewById(R.id.edit_WebService_URL);
        EditText lang_id = (EditText) findViewById(R.id.edit_LangID);
        EditText currency_id = (EditText) findViewById(R.id.edit_CurrencyID);
        EditText cons_key = (EditText) findViewById(R.id.edit_Cons_Key);
        EditText cons_secret = (EditText) findViewById(R.id.edit_Cons_Secret);

        String passcode_text = passcode.getText().toString();
        String passcode_confirm_text = passcode_confirm.getText().toString();

        String cons_key_text = cons_key.getText().toString();
        String cons_secret_text = cons_secret.getText().toString();

            Profile new_profile = new Profile();

            new_profile.setName(profile_name.getText().toString());
            try {
                new_profile.setPasscode(CryptoUtil.cryptoCode(passcode_text,passcode_text));
                new_profile.setAccAuthToken(CryptoUtil.cryptoCode(confirmed_token,passcode_text));
                new_profile.setAccAuthTokenSecret(CryptoUtil.cryptoCode(confirmed_secret, passcode_text));


            } catch (Exception e) {
                e.printStackTrace();
            }
            new_profile.setApiURL(api_url.getText().toString());
            new_profile.setLangID(lang_id.getText().toString());
        try {
            new_profile.setLastLogin(DateConverter.getCurrentDateTime());
        } catch (ParseException e) {
            e.printStackTrace();
        }
        new_profile.setCurrencyID(currency_id.getText().toString());


            new_profile.setConsKey(cons_key_text);
            new_profile.setConsSecret(cons_secret_text);



            dbManager = new DatabaseManager(this);
            try {
                dbManager.open();
            } catch (SQLException e) {
                e.printStackTrace();
         }

            dbManager.addProfile(new_profile);

            Intent backToWelcome = new Intent();
            setResult(RESULT_OK, backToWelcome);

            finish();

    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data){
        switch (requestCode) {
            case Constants.ADD_PROFILE_OAUTH_REQ_CODE:
                if (resultCode == RESULT_OK) {

                    Bundle res = data.getExtras();
                    String token_return = res.getString(Constants.TOKEN_RETURN_NAME);
                    String token_secret_return = res.getString(Constants.TOKEN_SECRET_RETURN_NAME);

                    add_a_new_profile(token_return, token_secret_return);
                } else {

                    Toast.makeText(this, String.format(getResources().getString(R.string.oauth_unsuc)), Toast.LENGTH_SHORT).show();
                }
                break;


            case Constants.PROFILE_SCANNER_REQ_CODE:
                if (resultCode == RESULT_OK) {
                    Bundle res_profile_scan = data.getExtras();
                    String scan_raw_text = res_profile_scan.getString("scan_text");
                    String scan_format = res_profile_scan.getString("scan_format");
                    if (scan_format.equals("PDF_417") || scan_format.equals("QR_CODE")|| scan_format.equals("DATA_MATRIX")) {
                        String delimiter = "#";
                        String profile_array[] = scan_raw_text.split(delimiter);

                        if (profile_array[0].equals("AndroHHT_Profile")) {

                            EditText edt_api_url = (EditText) findViewById(R.id.edit_WebService_URL);
                            edt_api_url.setText(profile_array[1].toString());

                            EditText edt_cos_key = (EditText) findViewById(R.id.edit_Cons_Key);
                            edt_cos_key.setText(profile_array[2].toString());

                            EditText edt_cos_secret = (EditText) findViewById(R.id.edit_Cons_Secret);
                            edt_cos_secret.setText(profile_array[3].toString());
                        } else {
                            Toast.makeText(this, "Invalid barcode format", Toast.LENGTH_SHORT).show();
                        }

                    }

                }
        }
    }


}
